{
  "title": "Asserts",
  "modules": [
    {
      "preparagraph": "ScalaTest makes three assertions available by default in any style trait. You can use:\n\n- `assert` for general assertions;\n- `assertResult` to differentiate expected from actual values;\n- `intercept` to ensure a bit of code throws an expected exception.\n\nIn any Scala program, you can write assertions by invoking `assert` and passing in a `Boolean` expression:\n\n```\nval left = 2\nval right = 1\nassert(left == right)\n``` \n\nIf the passed expression is `true`, `assert` will return normally. If `false`,\nScala's `assert` will complete abruptly with an `AssertionError`. This behavior is provided by\nthe `assert` method defined in object `Predef`, whose members are implicitly imported into every Scala source file.\n\n\nScalaTest provides a domain specific language (DSL) for expressing assertions in tests\nusing the word `should`. ScalaTest matchers provides five different ways to check equality, each designed to address a different need. They are:\n\n```\nresult should equal (3) // can customize equality\nresult should === (3)   // can customize equality and enforce type constraints\nresult should be (3)    // cannot customize equality, so fastest to compile\nresult shouldEqual 3    // can customize equality, no parentheses required\nresult shouldBe 3       // cannot customize equality, so fastest to compile, no parentheses required\n```\n\nCome on, your turn: true and false values can be compared with should matchers",
      "code": "true should be(__)",
      "solutions": [
        "true"
      ],
      "postparagraph": ""
    },
    {
      "preparagraph": "Booleans in asserts can test equality.",
      "code": "val v1 = 4\nval v2 = 4\nv1 === __",
      "solutions": [
        "v2"
      ],
      "postparagraph": "`===` is an assert. It is from ScalaTest, not from the Scala language."
    },
    {
      "preparagraph": "Sometimes we expect you to fill in the values",
      "code": "assert(__ == 1 + 1)",
      "solutions": [
        "2"
      ],
      "postparagraph": ""
    }
  ]
}