{
  "title": "Mutable Sets",
  "modules": [
    {
      "preparagraph": "Mutable sets can be created easily:",
      "code": "val mySet = mutable.Set(\"Michigan\", \"Ohio\", \"Wisconsin\", \"Iowa\")\nmySet.size should be(__)\nmySet += \"Oregon\"\nmySet contains \"Oregon\" should be(__)",
      "solutions": [
        "4",
        "true"
      ],
      "postparagraph": ""
    },
    {
      "preparagraph": "Mutable sets can have elements removed:",
      "code": "val mySet = mutable.Set(\"Michigan\", \"Ohio\", \"Wisconsin\", \"Iowa\")\nmySet -= \"Ohio\"\nmySet contains \"Ohio\" should be(__)",
      "solutions": [
        "false"
      ],
      "postparagraph": ""
    },
    {
      "preparagraph": "Mutable sets can have tuples of elements removed:",
      "code": "val mySet = mutable.Set(\"Michigan\", \"Ohio\", \"Wisconsin\", \"Iowa\")\nmySet -= (\"Iowa\", \"Ohio\")\nmySet contains \"Ohio\" should be(__)\nmySet.size should be(__)",
      "solutions": [
        "false",
        "2"
      ],
      "postparagraph": ""
    },
    {
      "preparagraph": "Mutable sets can have tuples of elements added",
      "code": "val mySet = mutable.Set(\"Michigan\", \"Wisconsin\")\nmySet += (\"Iowa\", \"Ohio\")\nmySet contains \"Ohio\" should be(__)\nmySet.size should be(__)",
      "solutions": [
        "true",
        "4"
      ],
      "postparagraph": ""
    },
    {
      "preparagraph": "Mutable sets can have Lists of elements added:",
      "code": "val mySet = mutable.Set(\"Michigan\", \"Wisconsin\")\nmySet ++= List(\"Iowa\", \"Ohio\")\nmySet contains \"Ohio\" should be(__)\nmySet.size should be(__)",
      "solutions": [
        "true",
        "4"
      ],
      "postparagraph": ""
    },
    {
      "preparagraph": "Mutable sets can have Lists of elements removed:",
      "code": "val mySet = mutable.Set(\"Michigan\", \"Ohio\", \"Wisconsin\", \"Iowa\")\nmySet --= List(\"Iowa\", \"Ohio\")\nmySet contains \"Ohio\" should be(__)\nmySet.size should be(__)",
      "solutions": [
        "false",
        "2"
      ],
      "postparagraph": ""
    },
    {
      "preparagraph": "Mutable sets can be cleared:",
      "code": "val mySet = mutable.Set(\"Michigan\", \"Ohio\", \"Wisconsin\", \"Iowa\")\nmySet.clear() // Convention is to use parens if possible when method called changes state\nmySet contains \"Ohio\" should be(__)\nmySet.size should be(__)",
      "solutions": [
        "false",
        "0"
      ],
      "postparagraph": ""
    }
  ]
}